
АЛГОРИТМ ПОИСКА

Задача состоит из двух частей.

У нас есть объекты:

let head = {
  glasses: 1
};

let table = {
  pen: 3
};

let bed = {
  sheet: 1,
  pillow: 2
};

let pockets = {
  money: 2000
};

1. С помощью свойства __proto__ задайте прототипы так, чтобы поиск любого свойства выполнялся по следующему пути: pockets → bed → table → head. Например, pockets.pen должно возвращать значение 3 (найденное в table), а bed.glasses – значение 1 (найденное в head).
2. Ответьте на вопрос: как быстрее получить значение glasses – через pockets.glasses или через head.glasses? При необходимости составьте цепочки поиска и сравните их.



ОТВЕТ:

1.
table.__proto__ = head;
bed.__proto__ = table;
pockets.__proto__ = bed;

2.
Свойство glasses находится непосредственно в объекте head, значит самый быстрый способ получить значение через этот объект,
а pockets является наследником этого свойства, и доступ к этому свойству осуществляет по цепочке прототипов, что естественно дольше.
Но в реальности javascript-движки оптимизируют производительность такого доступа, и нивелируют разницу в скорости.
